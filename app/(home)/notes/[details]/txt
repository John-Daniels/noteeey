// useEffect(() => {
  //   const saveChanges = async () => {
  //     console.log(selectedNote);

  //     if (user && selectedNote && !isSaving) {
  //       console.log(selectedNote, "second call");
        
  //       try {
  //         setIsSaving(true);
  //         const userDocRef = doc(db, "user", user.uid);
  //         const noteDocRef = doc(userDocRef, "note", selectedNote.id);

  //         if (selectedNote.content !== value) {
  //           await setDoc(noteDocRef, { content: value }, { merge: true });
  //         }
  //       } catch (error) {
  //         console.error("Error saving note:", error);
  //         toast.error("Error saving note");
  //       } finally {
  //         setIsSaving(false);
  //       }
  //     }
  //   };

  //   saveChanges();
  // }, [user, selectedNote, value]);

  // try {
  //   const querySnapshot = await getDocs(noteCollectionRef);
  //   const notesData: React.SetStateAction<any[]> = [];
  //   querySnapshot.forEach((doc) => {
  //     notesData.push({ id: doc.id, ...doc.data() });
  //   });
  //   //apply the formate function to the timestamp inside the data directly
  //   const formattedNotes = notesData.map((data) => ({
  //     ...data,
  //   }));
  //   setNotes(formattedNotes);
  // } catch (error) {
  //   toast.error("Error fetching notes");
  // }